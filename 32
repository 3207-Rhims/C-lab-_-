#include <stdio.h>
 
// Below height and width variable can be used
// to create a user-defined sized alphabet's pattern
 
// Number of lines for the alphabet's pattern
int height = 5;
// Number of character width in each line
int width = 9;
 
// Function to find the absolute value
// of a number D
int abs(int d)
{
    return d < 0 ? -1 * d : d;
}
 
// Function to print the pattern of 'A'
void printA()
{
    int n = width / 2, i, j;
    for (i = 0; i < height; i++) {
        for (j = 0; j <= width; j++) {
            if (j == n || j == (width - n)
                || (i == height / 2 && j > n
                    && j < (width - n)))
                printf("*");
            else
                printf(" ");
        }
        printf("\n");
        n--;
    }
}
 
// Function to print the pattern of 'B'
void printB()
{
    int i, j, half = (height / 2);
    for (i = 0; i < height; i++) {
        printf("*");
        for (j = 0; j < width; j++) {
            if ((i == 0 || i == height - 1 || i == half)
                && j < (width - 2))
                printf("*");
            else if (j == (width - 2)
                    && !(i == 0 || i == height - 1
                        || i == half))
                printf("*");
            else
                printf(" ");
        }
        printf("\n");
    }
}
 
// Function to print the pattern of 'C'
void printC()
{
    int i, j;
    for (i = 0; i < height; i++) {
        printf("*");
        for (j = 0; j < (height - 1); j++) {
            if (i == 0 || i == height - 1)
                printf("*");
            else
                continue;
        }
        printf("\n");
    }
}
 
// Function to print the pattern of 'D'
void printD()
{
    int i, j;
    for (i = 0; i < height; i++) {
        printf("*");
        for (j = 0; j < height; j++) {
            if ((i == 0 || i == height - 1)
                && j < height - 1)
                printf("*");
            else if (j == height - 1 && i != 0
                    && i != height - 1)
                printf("*");
            else
                printf(" ");
        }
        printf("\n");
    }
}
 
// Function to print the pattern of 'E'
void printE()
{
    int i, j;
    for (i = 0; i < height; i++) {
        printf("*");
        for (j = 0; j < height; j++) {
            if ((i == 0 || i == height - 1)
                || (i == height / 2
                    && j <= height / 2))
                printf("*");
            else
                continue;
        }
        printf("\n");
    }
}
 
// Function to print the pattern of 'F'
void printF()
{
    int i, j;
    for (i = 0; i < height; i++) {
        printf("*");
        for (j = 0; j < height; j++) {
            if ((i == 0) || (i == height / 2
                            && j <= height / 2))
                printf("*");
            else
                continue;
        }
        printf("\n");
    }
}
 
// Function to print the pattern of 'G'
void printG()
{
    int i, j;
    width--;
    for (i = 0; i < height; i++) {
        for (j = 0; j < width; j++) {
            if ((i == 0 || i == height - 1)
                && (j == 0 || j == width - 1))
                printf(" ");
            else if (j == 0)
                printf("*");
            else if (i == 0 && j <= height)
                printf("*");
            else if (i == height / 2
                    && j > height / 2)
                printf("*");
            else if (i > height / 2
                    && j == width - 1)
                printf("*");
            else if (i == height - 1
                    && j < width)
                printf("*");
            else
                printf(" ");
        }
        printf("\n");
    }
}
 
// Function to print the pattern of 'H'
void printH()
{
    int i, j;
    for (i = 0; i < height; i++) {
        printf("*");
        for (j = 0; j < height; j++) {
            if ((j == height - 1)
                || (i == height / 2))
                printf("*");
            else
                printf(" ");
        }
        printf("\n");
    }
}
 
// Function to print the pattern of 'I'
void printI()
{
    int i, j;
    for (i = 0; i < height; i++) {
        for (j = 0; j < height; j++) {
            if (i == 0 || i == height - 1)
                printf("*");
            else if (j == height / 2)
                printf("*");
            else
                printf(" ");
        }
        printf("\n");
    }
}
 
void printU()
{
    int i, j;
    for (i = 0; i < height; i++) {
        if (i != 0 && i != height - 1)
            printf("*");
        else
            printf(" ");
        for (j = 0; j < height; j++) {
            if (((i == height - 1)
                && j >= 0
                && j < height - 1))
                printf("*");
            else if (j == height - 1 && i != 0
                    && i != height - 1)
                printf("*");
            else
                printf(" ");
        }
        printf("\n");
    }
}
 


void printPattern(char character)
{
    switch (character) {
    case 'A':
        printA();
        break;
    case 'B':
        printB();
        break;
    case 'C':
        printC();
        break;
    case 'D':
        printD();
        break;
    case 'E':
        printE();
        break;
    case 'F':
        printF();
        break;
    case 'G':
        printG();
        break;
    case 'H':
        printH();
        break;
    case 'I':
        printI();
        break;


    }
}
 
// Driver Code
int main()
{
    char character = 'A';
    printPattern(character);
    return 0;
}
